/*! angular-stepper - v0.0.3 - 2016-01-08
* Copyright (c) Julien Bouquillon [revolunet] 2016; Licensed  */
angular.module("revolunet.stepper",[]).directive("rnStepper",function(){return{restrict:"AE",require:"ngModel",scope:{min:"=",max:"=",ngModel:"=",ngDisabled:"="},template:'<button type="button" ng-disabled="isOverMin() || ngDisabled" ng-click="decrement()">-</button><input type="text" ng-model="ngModel" ng-disabled="ngDisabled"><button type="button" ng-disabled="isOverMax() || ngDisabled" ng-click="increment()">+</button>',link:function(a,b,c,d){function e(){var b=!(a.isOverMin(!0)||a.isOverMax(!0));d.$setValidity("outOfBounds",b)}function f(a){d.$setViewValue(d.$viewValue+a),d.$render()}a.label="",angular.isDefined(c.label)&&c.$observe("label",function(b){a.label=" "+b,d.$render()}),d.$render=function(){e()},d.$formatters.push(function(a){return parseInt(a,10)}),d.$parsers.push(function(a){return parseInt(a,10)}),a.isOverMin=function(b){var c=b?0:1;return angular.isDefined(a.min)&&d.$viewValue-c<parseInt(a.min,10)},a.isOverMax=function(b){var c=b?0:1;return angular.isDefined(a.max)&&d.$viewValue+c>parseInt(a.max,10)},a.increment=function(){f(1)},a.decrement=function(){f(-1)},e(),a.$watch("min+max",function(){e()})}}});